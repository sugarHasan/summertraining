Hasan Yildirim Log

15 July

12:10 Read the examples of Exam Average Problem and Perfect Number Problem. Realise the examples and start to create my own examples.
1:00 Finished my first example and upload. It might be a little bit hard for a starter and has got a lot of unnecesseray details because of its a whole program. In the next examples i would do as a function which declare the parameters and only bothered with the main algorithm.
3:00 Quick group meeting as we finally concluded on 3 different options that this project might lead. All of them has advantage and disadvantages in some manners. First one is to there will be line of psuedocodes and you will drag and drop and transform it to the c++ code and look that it will pass the test case or not. Second one is that you will write the psuedocodes where in special functions like if where you might go in two directions it will give you an option. Where the line you are executing will be red and the options that you will go will be green and you will select the one that you want. Third one is the one that it will only able to load the previously crafted psuedocodes and it will trace the algorithms in given input. For being honest, I have seen a lot of individuals to really bothered with implementation and syntax complications to quit the algorithms so first one might be extremely useful for those individuals. Also second one is great to understand the top-down coding and great at tracing although it is only benefitial for extremely basic level students.After they learn that an if statement is 2 optioned, the website will be useless.
3:30 Started to write some functions as the example programs. Change from program to function should be must if we continue on the option 1 also. 
3:45 I have wrote an original question to show the power of the first options necessity. As seen in the algorithm, after finding the main purpose of the program implementation is not a problem but for the initial learning process it freaks a lot of people that they are not concentrated to think intiutively. For example in the website for this problem, there will be for example 20 psuedolines avaliable which is related with dynamic programming but the result was only the one line of psuedocode and only focus on to understand the main problem.
4:00 Recursive functions might not be top-down. Ask Mr David about it for further examples.
4:10 Finished 3 examples which I should be able to understand the need of Mr David and his expectations. Will continue to add some more tomorrow. Call it a day for now.


16 July

13:00 Started to think about the top-down designed functions and report some of them.
